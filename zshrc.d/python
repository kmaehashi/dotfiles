# interactive
export PYTHONSTARTUP=~/.pythonrc.py

# uv
if which uv &> /dev/null; then
    eval "$(uv generate-shell-completion zsh)"
fi

# virtualenv
if which virtualenvwrapper_lazy.sh; then
  # for Mac
  source virtualenvwrapper_lazy.sh
elif [ -r /etc/bash_completion.d/virtualenvwrapper ]; then
  # for Debian/Ubuntu
  source /etc/bash_completion.d/virtualenvwrapper
fi &> /dev/null

# pyenv
PYENV_ROOT=~/.pyenv
if [ -d "${PYENV_ROOT}" ]; then
  export PYENV_ROOT
  export PATH="${PYENV_ROOT}/bin:${PATH}"
  eval "$(pyenv init --path)"
  eval "$(pyenv init -)"
  PROMPT_HOOKS="_hook_prompt_pyenv ${PROMPT_HOOKS}"
else
  unset PYENV_ROOT
fi

_hook_prompt_pyenv() {
  if [ ! -z "${PYENV_ROOT}" -a -f "${PYENV_ROOT}/version" ]; then
    read PYENV_PRIMARY < "${PYENV_ROOT}/version"
    if [ "${PYENV_PRIMARY}" != "system" ]; then
      echo -n "(pyenv: ${PYENV_PRIMARY}) "
    fi
  fi
}

# pydoc
which pydoc &>/dev/null || alias pydoc='python -m pydoc'

# pymod
function pymod() {
  MOD="${1}"
  python3 -c "
import ${MOD}
if hasattr(${MOD}, '__path__'):
    p = ${MOD}.__path__
    if hasattr(p, '_path'):
        p = p._path
    path = p[0]
else:
    path = ${MOD}.__file__
print(path)
"
}

# python_pkgconfig
function python_pkgconfig() {
   local PKG_CONFIG_PYTHON_PATH=$(python -c "import os, sys; print(os.path.join(os.path.dirname(os.path.realpath(sys.executable)), '..', 'lib', 'pkgconfig'))")
   echo "export PKG_CONFIG_PATH=\"${PKG_CONFIG_PYTHON_PATH}\""
}
