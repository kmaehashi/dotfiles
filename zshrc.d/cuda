# CUDA
CUDA_HOME="/usr/local/cuda"
if [ -d "${CUDA_HOME}" ]; then
  export PATH="${CUDA_HOME}/bin:${PATH}"
  export LD_LIBRARY_PATH="${CUDA_HOME}/lib64:${LD_LIBRARY_PATH}"
else
  unset CUDA_HOME
fi

# cudnnenv (pip install cudnnenv)
if [ -L ~/.cudnn/active ]; then
  export LD_LIBRARY_PATH=~/.cudnn/active/cuda/lib64:$LD_LIBRARY_PATH
  export CPATH=~/.cudnn/active/cuda/include:$CPATH
  export LIBRARY_PATH=~/.cudnn/active/cuda/lib64:$LIBRARY_PATH
fi

compctl -K _cudnnenv cudnnenv
function _cudnnenv () {
  local words completions
  read -cA words
  if [ "${#words}" -eq 2 ]; then
    completions="$(echo install,install-file,activate,uninstall,version,versions,deactivate,--help,--version | tr ',' '\n')"
  elif [ "${words[2]}" = "install" ]; then
    completions="$(cudnnenv versions | grep -v 'versions:' | tr -d '* ')"
  elif [ "${words[2]}" = "uninstall" -o "${words[2]}" = "activate" ]; then
    completions="$(ls ~/.cudnn/versions)"
  fi
  reply=(${(ps:\n:)completions})
}

# ncclenv
if [ -L ~/.nccl/active ]; then
  export LD_LIBRARY_PATH=~/.nccl/active/cuda/lib64:$LD_LIBRARY_PATH
  export CPATH=~/.nccl/active/cuda/include:$CPATH
  export LIBRARY_PATH=~/.nccl/active/cuda/lib64:$LIBRARY_PATH
fi
